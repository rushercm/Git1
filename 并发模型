线程容易理解 他是通过cpu缓存锁 以及线程共享同步来实现的，而事件驱动呢？我的理解是事件驱动 其实就是消息驱动 消息是信封，事件是信函 
也就是事件的模式通过消息来传递，
这样放大到上面的并发编程来看，也就是说本质上 那些JMS 消息中间件 是基于事件驱动的并发编程，只不过他是通过并发异步队列来作为共享区 
解决了远程时间空间的问题，同理EJB 消息驱动bean 我的理解应该也是事件（消息）驱动的并发，
甚至在后面我们讲的actor 模型 本质上我认为跟jms 这些消息中间件很相识，只是他不在采用并发队列共享数据，而是每一次通过发送消息实现交互。 
以上只是我的理解 所以不一定正确。后面有时间我会讲到dispatcher 无锁并发框架 还有actor的角色模型的并发框架。
