限流策略:
   令牌桶：RateLimiter(Guava):桶满/阻塞， 无令牌可取则拒绝服务)
   漏斗算法
   计数器:AutomicInteger(超过阈值则拒绝服务，粗暴的反馈给用户)/Semaphore(瞬时高并发，超过阈值则放入阻塞队列)

分布式锁:基于zookeeper客户端curator(重连，可重入);
         -->zooInspector（可视化监控zookeeper）
         
AQS:独占(ReenTrantLock -- Exclusive)
    -->AQS的模板方法acquire通过调用子类自定义实现的tryAcquire获取同步状态失败后->将线程构造成Node节点(addWaiter)->将Node节点添加到同步队列对尾(addWaiter)->节点以自旋的方法获取同步状态(acquirQueued)。在节点自旋获取同步状态时，只有其前驱节点是头节点的时候才会尝试获取同步状态，如果该节点的前驱不是头节点或者该节点的前驱节点是头节点单获取同步状态失败，则判断当前线程需要阻塞，如果需要阻塞则需要被唤醒过后才返回。
    
    共享(ReenTrantReadWriteLock -- Shared） 读锁的传播
    -->AQS的模板方法acquire通过调用子类自定义实现的tryAcquire获取同步状态失败后->将线程构造成Node节点(addWaiter)->将Node节点添加到同步队列对尾(addWaiter)->节点以自旋的方法获取同步状态(acquirQueued)。在节点自旋获取同步状态时，只有其前驱节点是头节点的时候才会尝试获取同步状态，如果该节点的前驱不是头节点或者该节点的前驱节点是头节点单获取同步状态失败，则判断当前线程需要阻塞，如果需要阻塞则需要被唤醒过后才返回

