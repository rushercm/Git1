stream(多核):lamda,串/并行，fork/join（迭代器的并行化），链表管道化
      lists.parallelStream.
      filter(t -> t.get == '').
      sorted().
      map().
      collect(Collectors.toList());
    foreach是terminal,peek操作多次  

https://www.ibm.com/developerworks/cn/java/j-lo-java8streamapi/      

default method :允许在接口中实现方法，类实现多个接口时，可直接调用方法(多继承)
                避免了接口与实现类高耦合度
     -->参考新版foreach:
      package java.lang;    
      import java.util.Objects;
      import java.util.function.Consumer;  
      public interface Iterable<T> {
        default void forEach(Consumer<? super T> action) {
            Objects.requireNonNull(action);
            for (T t : this) {
                action.accept(t);
            }
        }
    }
