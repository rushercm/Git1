safari根据plist更新:
itms-services://?action=download-manifest&url=       ftp路径

ServletContextListner下contextInitialized() -->timer.schedule(new TinerTask(){},0,1000) 多次初始化resource下配置文件

前端XSS和CSRF攻击(meta referer字段配置fromUrl):https://www.w3.org/TR/referrer-policy/
      -->1."no-referrer"  2."no-referrer-when-downgrade"  3."same-origin" 
         4."origin"       5."strict-origin"               6."origin-when-cross-origin"
         7."strict-origin-when-cross-origin"    8."unsafe-url"

Jedis <--> Lettuce(线程安全，异步可监控)

cpu过高分析：https://my.oschina.net/u/1420452/blog/2245304
堆栈文件分析：http://fastthread.io/index.jsp

volatile保证线程执行的有序性，DCL（单例模式的双重检查锁）

create gist(idea):gist.github（私有代码共享，可分享但不可被搜索到）
运维日记:https://www.kancloud.cn/devops-centos/centos-linux-devops/558438
动态规划:https://www.geeksforgeeks.org/dynamic-programming/
Netty分析:https://www.kancloud.cn/ssj234/netty-source/433215

AVL树:左旋或右旋四种情况(LL,RR(前两种只需一次旋转，找前驱或后继节点),RL,LR(后两种则要先局部旋再整体旋))
TreeMap:lastKey(返回key的最大值), ceilingKey(返回刚比所传key大的key值),floorKey(返回刚比所传key小的key值),复杂度O(logn)
            -->如果是链表，则只能遍历，效率差


同一个主程中业务多模块执行解耦：基于spring事件驱动，实现ApplicationListener接口，
-->可配置权重优先级SmartApplicationListner;https://www.cnblogs.com/l3306/p/10757291.html


如何优化过多的if/else: 1.枚举 
      --> 2.java8的optional(非空判断):Optional.ofNullable()  表驱动法 
      3.策略模式等。。。

go的ide：liteide，vim+go plus，goland

geek源码:https://github.com/geektime-geekbang/go_learning
传智springcloud：https://github.com/loaderlin/Word


Grafana:运维监控 类似ELK


CSR(客户端渲染) SSR(服务端渲染) https://www.cnblogs.com/dreamcc/p/10830457.html

Gra
